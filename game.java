/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjectUAS_Alpro2;

import java.awt.CardLayout;
import java.util.TimerTask;
import java.util.Timer;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ADMIN
 */
public class game extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public game() {
        initComponents();
        setLocationRelativeTo(null);
        benar.setVisible(false);
        salah.setVisible(false);
        score_table();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        pnlDash = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnSU = new javax.swing.JButton();
        btLogin = new javax.swing.JButton();
        btExitProgram = new javax.swing.JButton();
        pnlLogin = new javax.swing.JPanel();
        txtNameLog = new javax.swing.JTextField();
        txtPassLog = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        btStart = new javax.swing.JButton();
        btGuest1 = new javax.swing.JButton();
        btBack = new javax.swing.JButton();
        pnlSignUp = new javax.swing.JPanel();
        txtUsername = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtNoTelp = new javax.swing.JTextField();
        txtPassSU = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        btSignUp = new javax.swing.JButton();
        btHaveAccount = new javax.swing.JButton();
        btGuest2 = new javax.swing.JButton();
        homePage = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        mulaiGame = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        gamePage = new javax.swing.JPanel();
        salah = new javax.swing.JLabel();
        benar = new javax.swing.JLabel();
        skor = new javax.swing.JLabel();
        kata = new javax.swing.JLabel();
        timer_txt = new javax.swing.JLabel();
        ans = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        repeat = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        StartGame = new javax.swing.JButton();
        scorePage = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        backHomePage1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        container.setMinimumSize(new java.awt.Dimension(550, 391));
        container.setPreferredSize(new java.awt.Dimension(550, 391));
        container.setLayout(new java.awt.CardLayout());

        pnlDash.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PROJEK UAS ALPRO 2 REG Penyambut 2-01.png"))); // NOI18N
        pnlDash.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnSU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSUActionPerformed(evt);
            }
        });
        pnlDash.add(btnSU, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 690, 180, 70));

        btLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoginActionPerformed(evt);
            }
        });
        pnlDash.add(btLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 690, 190, 70));

        btExitProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitProgramActionPerformed(evt);
            }
        });
        pnlDash.add(btExitProgram, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 790, 180, 80));

        container.add(pnlDash, "dash");

        pnlLogin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNameLog.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtNameLog.setBorder(null);
        pnlLogin.add(txtNameLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 520, 50));

        txtPassLog.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        txtPassLog.setBorder(null);
        pnlLogin.add(txtPassLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 570, 520, 60));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PROJEK UAS ALPRO 2 REG Login-01.png"))); // NOI18N
        pnlLogin.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1080));

        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });
        pnlLogin.add(btStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 670, 180, 70));

        btGuest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuest1ActionPerformed(evt);
            }
        });
        pnlLogin.add(btGuest1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 770, 540, 70));

        btBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBackActionPerformed(evt);
            }
        });
        pnlLogin.add(btBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 670, 170, 70));

        container.add(pnlLogin, "login");

        pnlSignUp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUsername.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtUsername.setBorder(null);
        pnlSignUp.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 306, 550, 60));

        txtEmail.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtEmail.setBorder(null);
        pnlSignUp.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 406, 550, 60));

        txtNoTelp.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtNoTelp.setBorder(null);
        pnlSignUp.add(txtNoTelp, new org.netbeans.lib.awtextra.AbsoluteConstraints(864, 506, 550, 60));

        txtPassSU.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        txtPassSU.setBorder(null);
        pnlSignUp.add(txtPassSU, new org.netbeans.lib.awtextra.AbsoluteConstraints(856, 610, 560, 50));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Daftar-01.png"))); // NOI18N
        pnlSignUp.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 1520, 1080));

        btSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSignUpActionPerformed(evt);
            }
        });
        pnlSignUp.add(btSignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 700, 180, 70));

        btHaveAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHaveAccountActionPerformed(evt);
            }
        });
        pnlSignUp.add(btHaveAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 789, 440, 40));

        btGuest2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuest2ActionPerformed(evt);
            }
        });
        pnlSignUp.add(btGuest2, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 850, 570, 70));

        container.add(pnlSignUp, "signup");

        homePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PROJEK UAS ALPRO 2 REG Beranda-01.png"))); // NOI18N
        homePage.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        mulaiGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulaiGameActionPerformed(evt);
            }
        });
        homePage.add(mulaiGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 620, 330, 230));

        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });
        homePage.add(keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 890, 330, 90));

        container.add(homePage, "homePage");

        gamePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        salah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Salah-01.png"))); // NOI18N
        gamePage.add(salah, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 130, 50, 50));

        benar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Benar-01.png"))); // NOI18N
        gamePage.add(benar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 130, 50, 50));

        skor.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        skor.setText("0");
        gamePage.add(skor, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 140, 130, 40));

        kata.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        kata.setForeground(new java.awt.Color(121, 64, 2));
        kata.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gamePage.add(kata, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 330, 90));

        timer_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 120)); // NOI18N
        timer_txt.setForeground(new java.awt.Color(121, 64, 2));
        timer_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gamePage.add(timer_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 700, 170, 130));

        ans.setBackground(new java.awt.Color(255, 242, 226));
        ans.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ans.setBorder(null);
        ans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ansActionPerformed(evt);
            }
        });
        ans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ansKeyTyped(evt);
            }
        });
        gamePage.add(ans, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 580, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/PROJEK UAS ALPRO 2 REG.png Game Fixed-01.png"))); // NOI18N
        gamePage.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        repeat.setBorder(null);
        repeat.setBorderPainted(false);
        repeat.setFocusPainted(false);
        repeat.setOpaque(false);
        repeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatActionPerformed(evt);
            }
        });
        gamePage.add(repeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 110, 130, 120));

        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        gamePage.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 980, 1370, 60));

        StartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameActionPerformed(evt);
            }
        });
        gamePage.add(StartGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 130, 130));

        container.add(gamePage, "gamePage");

        scorePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        scorePage.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 850, 470));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/TABEL SKOR (1).png"))); // NOI18N
        scorePage.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        jButton1.setBackground(new java.awt.Color(121, 64, 2));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jButton1.setText("Hapus");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        scorePage.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 870, 180, 60));

        backHomePage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backHomePage1ActionPerformed(evt);
            }
        });
        scorePage.add(backHomePage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 870, 180, 70));

        container.add(scorePage, "scorePage");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 1522, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int scores = 0;
    String emailUser, emailVal;
    
    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        benar.setVisible(false);
        salah.setVisible(false);
        String soal = ambilKodeMorse(kata.getText());
        String jawaban = ans.getText();
       
        System.out.println(soal);
        System.out.println(jawaban);
        
        boolean cek = cekJawaban(soal, jawaban);
        if(cek) {
            scores += 10;
            skor.setText(scores + "");
            String kataTerpilih = kataAcak();
            kata.setText(kataTerpilih);
            benar.setVisible(true);
        } else {
            salah.setVisible(true);
        }
    }//GEN-LAST:event_submitActionPerformed

    private void ansKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ansKeyTyped
        char c = evt.getKeyChar();
        if(c != '.' && c != '-' && c != ' ') {
            evt.consume();
        }
    }//GEN-LAST:event_ansKeyTyped

    private void repeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatActionPerformed
        timer.cancel();
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_repeatActionPerformed

    
    private void mulaiGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulaiGameActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "gamePage");
        
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_mulaiGameActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        JOptionPane.showMessageDialog(null, "Logout Anda Telah Berhasil,"
            + " Mohon Login Ulang");
        
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "dash");
    }//GEN-LAST:event_keluarActionPerformed

    
    private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
        JOptionPane.showMessageDialog(null, "Bersiap Untuk Menjawab Soal"
                + " Kode Morsenya !!!");
        waktu();
        String kataTerpilih = kataAcak();
        kata.setText(kataTerpilih);
        
    }//GEN-LAST:event_StartGameActionPerformed

    private void ansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ansActionPerformed
        benar.setVisible(false);
        salah.setVisible(false);
        String soal = ambilKodeMorse(kata.getText());
        String jawaban = ans.getText();
       
        System.out.println(soal);
        System.out.println(jawaban);
        
        boolean cek = cekJawaban(soal, jawaban);
        if(cek) {
            scores += 10;
            skor.setText(scores + "");
            String kataTerpilih = kataAcak();
            kata.setText(kataTerpilih);
            benar.setVisible(true);
            
        } else {
            salah.setVisible(true);
        }
    }//GEN-LAST:event_ansActionPerformed

    private void backHomePage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backHomePage1ActionPerformed
        skor.setText("0");
        scores = 0;
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "homePage");
    }//GEN-LAST:event_backHomePage1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int baris = jTable1.rowAtPoint(evt.getPoint());
        
        emailVal = jTable1.getValueAt(baris, 1).toString();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "DELETE FROM admin WHERE email = '" + emailVal + "'";
            java.sql.Connection conn = config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.executeUpdate();
        } catch (Exception e) {
            
        }
        
        score_table();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSUActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "signup");
    }//GEN-LAST:event_btnSUActionPerformed

    private void btLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLoginActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "login");
    }//GEN-LAST:event_btLoginActionPerformed

    private void btExitProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitProgramActionPerformed
        int response = JOptionPane.showConfirmDialog(null,"Do you want to leave"
            + " application ?","Confirmation",
            JOptionPane.YES_OPTION,JOptionPane.QUESTION_MESSAGE);
        switch (response) {
            case JOptionPane.YES_OPTION:
            System.exit(0);
        }
    }//GEN-LAST:event_btExitProgramActionPerformed

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
        try{
            String sql = "SELECT * FROM admin WHERE password ='" + txtPassLog.getText()
                    + "' OR username ='" + txtNameLog.getText() + "' OR"
                    + " email ='" + txtNameLog.getText() + "'";
            java.sql.Connection conn = (java.sql.Connection)config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            
            java.sql.ResultSet rs = pst.executeQuery(sql);
            
            if (rs.next()) {
                String tes = "";
                if ( ( txtNameLog.getText().equals(rs.getString("username")) ||
                    txtNameLog.getText().equals(rs.getString("email")) ) &&
                txtPassLog.getText().equals (rs.getString ("password"))){

                JOptionPane.showMessageDialog(null, "Login Anda Telah Berhasil,"
                    + " Selamat Bermain :)");

                emailUser = txtNameLog.getText();

                CardLayout cLayout = (CardLayout) container.getLayout();
                cLayout.show(container, "homePage");

                txtNameLog.setText("");
                txtPassLog.setText("");
            } else{
                JOptionPane.showMessageDialog(null, "maaf, kombinasi username "
                    + "dan password salah");
            }
        } else {
            if (txtNameLog.getText() == ""){
                JOptionPane.showMessageDialog(null, "Mohon isi field username");
            } else if (txtPassLog.getText() == ""){
                JOptionPane.showMessageDialog(null, "Mohon isi field password");
            } else if (txtPassLog.getText() == "" && txtNameLog.getText() == ""){
                JOptionPane.showMessageDialog(null, "Mohon isi field username & password");
            } else{
                JOptionPane.showMessageDialog(null, "rs.next() tidak tersambung");
            }
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btStartActionPerformed

    private void btGuest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuest1ActionPerformed
        JOptionPane.showMessageDialog(null, "Login Anda Telah Berhasil, "
            + "Selemat Bermain !!!");

        game secondGUI = new game();
        secondGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btGuest1ActionPerformed

    private void btBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBackActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "dash");
    }//GEN-LAST:event_btBackActionPerformed

    private void btSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSignUpActionPerformed
        try {
            // Koneksi ke database
            String sql = "SELECT COUNT(*) FROM admin WHERE email = ?";
            java.sql.Connection conn = (java.sql.Connection)config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, txtEmail.getText());

            java.sql.ResultSet rs = pst.executeQuery();

            // Jika email sudah ada, tampilkan pesan kesalahan
            if (rs.next() && rs.getInt(1) > 0) {
                JOptionPane.showMessageDialog(null, "Email sudah terdaftar. Silakan gunakan email lain.");
                txtUsername.setText("");
                txtEmail.setText("");
                txtNoTelp.setText("");
                txtPassSU.setText("");
            } else {
                // Jika email tidak ada, lanjutkan proses pendaftaran
                sql = "INSERT INTO admin (username, password, no_telp, email) VALUES (?, ?, ?, ?)";
                pst = conn.prepareStatement(sql);
                pst.setString(1, txtUsername.getText());
                pst.setString(2, txtPassSU.getText());
                pst.setString(3, txtNoTelp.getText());
                pst.setString(4, txtEmail.getText());
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Penambahan Data Peserta Berhasil");

                // Mengosongkan field input
                txtEmail.setText("");
                txtNoTelp.setText("");
                txtUsername.setText("");
                txtPassSU.setText("");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btSignUpActionPerformed

    private void btHaveAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHaveAccountActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "login");
    }//GEN-LAST:event_btHaveAccountActionPerformed

    private void btGuest2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuest2ActionPerformed
        JOptionPane.showMessageDialog(null, "Login Anda Telah Berhasil, "
            + "Selemat Bermain !!!");

        game secondGUI = new game();
        secondGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btGuest2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private static String kataAcak() {
        String []arr = {"Hanif", "Dimas", "Robi", "Argha", "Zulhan"};
        
        String kataacak = arr[(int) (Math.random() * (arr.length))];
//        System.out.println((int) (Math.random() * (arr.length)));
        return arr[(int) (Math.random() * (arr.length))];
        
    }
    
    private Timer timer;
    
    int countdownSeconds =  20;

    private void waktu() {
        
        if(timer != null) {
            timer.cancel();
        }
        
        timer = new Timer();
        int delay = 0;
        int period = 1000;

        
        TimerTask task = new TimerTask() {
            int secondsRemaining = countdownSeconds;

            @Override
            public void run() {
                timer_txt.setText(Integer.toString(secondsRemaining));
                secondsRemaining--;
                if (secondsRemaining == -1){
                    timer.cancel(); // Stop the timer
                    ans.setText("");
                    kata.setText("");
                    timer_txt.setText(countdownSeconds + "");
                    
                    try {
                        // Query untuk update skor
                        String sql = "UPDATE admin SET scores = ? WHERE email = ?";

                        // Koneksi ke database
                        java.sql.Connection conn = config.configDB();
                        java.sql.PreparedStatement pst = conn.prepareStatement(sql);

                        // Mengatur nilai parameter dalam PreparedStatement
                        pst.setString(1, skor.getText());
                        pst.setString(2, emailUser);

                        // Menjalankan update query
                        int affectedRows = pst.executeUpdate();

                        // Jika diperlukan, cek apakah ada baris yang terupdate
                        if (affectedRows > 0) {
                            System.out.println("Update berhasil");
                        } else {
                            System.out.println("Email tidak ditemukan");
                        }

                        // Menutup PreparedStatement dan Connection
                        pst.close();
                        conn.close();

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    score_table();
                    
                    JOptionPane.showMessageDialog(null, "Waktu telah habis, selamat anda memperoleh skor " + skor.getText() + "");
                                        
                    CardLayout cLayout = (CardLayout) container.getLayout();
                    cLayout.show(container, "scorePage");
                }
            }
        };

        // Schedule the task to run every second
        timer.scheduleAtFixedRate(task, delay, period);
    }

    
    private static String loadDatabase(char c) {
        String morse = "";
        try {
            String sql = "SELECT code FROM code WHERE simbol = '" + c + "'";
            System.out.println(sql);
            java.sql.Connection conn = (java.sql.Connection)config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            
            try{
                java.sql.ResultSet rs = pst.executeQuery(sql);
                if(rs.next()){
                    morse = rs.getString("code");
                }
            } catch (SQLException e){
                e.printStackTrace();
            }
            
        } catch (SQLException e){
            e.printStackTrace();
        }
        
        return morse;
    }
    
    public static String ambilKodeMorse(String kataTerpilih) {
        StringBuilder morseCodeStr = new StringBuilder();
        for (int i = 0; i < kataTerpilih.length(); i++) {
            char lowercaseChar = Character.toLowerCase(kataTerpilih.charAt(i)); // Konversi ke huruf kecil
            String morse = loadDatabase(lowercaseChar);
            if (morse != null) {
                morseCodeStr.append(morse).append(" ");
            }
        }
        return morseCodeStr.toString().trim();
    }
        
    private static boolean cekJawaban(String jawaban, String soal) {
        return jawaban.trim().equals(soal.trim());
    }
    
        private void score_table(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("Email");
        model.addColumn("Username");
        model.addColumn("Scores");

        try {
            int n = 1;
            
            String sql = "SELECT email, username, scores FROM admin";
            java.sql.Connection conn = (java.sql.Connection)config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            java.sql.ResultSet rs = pst.executeQuery(sql);
            
            while (rs.next()) {
                model.addRow(new Object[]{
                    n++,
                    rs.getString("email"),
                    rs.getString("username"),
                    rs.getString("scores")
                });
            }
            jTable1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartGame;
    private javax.swing.JTextField ans;
    private javax.swing.JButton backHomePage1;
    private javax.swing.JLabel benar;
    private javax.swing.JButton btBack;
    private javax.swing.JButton btExitProgram;
    private javax.swing.JButton btGuest1;
    private javax.swing.JButton btGuest2;
    private javax.swing.JButton btHaveAccount;
    private javax.swing.JButton btLogin;
    private javax.swing.JButton btSignUp;
    private javax.swing.JButton btStart;
    private javax.swing.JButton btnSU;
    private javax.swing.JPanel container;
    private javax.swing.JPanel gamePage;
    private javax.swing.JPanel homePage;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel kata;
    private javax.swing.JButton keluar;
    private javax.swing.JButton mulaiGame;
    private javax.swing.JPanel pnlDash;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPanel pnlSignUp;
    private javax.swing.JButton repeat;
    private javax.swing.JLabel salah;
    private javax.swing.JPanel scorePage;
    private javax.swing.JLabel skor;
    private javax.swing.JButton submit;
    private javax.swing.JLabel timer_txt;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNameLog;
    private javax.swing.JTextField txtNoTelp;
    private javax.swing.JPasswordField txtPassLog;
    private javax.swing.JPasswordField txtPassSU;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
