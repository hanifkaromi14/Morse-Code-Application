/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjectUAS_Alpro2;

import java.awt.CardLayout;
import java.util.TimerTask;
import java.util.Timer;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import javax.swing.SwingUtilities;

/**
 *
 * @author ADMIN
 */
public class game extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public game() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        homePage = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        mulaiGame = new javax.swing.JButton();
        keluar = new javax.swing.JButton();
        gamePage = new javax.swing.JPanel();
        kata = new javax.swing.JLabel();
        timer_txt = new javax.swing.JLabel();
        ans = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        repeat = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        StartGame = new javax.swing.JButton();
        winPage = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        backHomePage1 = new javax.swing.JButton();
        losePage = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        backHomePage2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        container.setMinimumSize(new java.awt.Dimension(550, 391));
        container.setPreferredSize(new java.awt.Dimension(550, 391));
        container.setLayout(new java.awt.CardLayout());

        homePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon("D:\\Pribadi\\Picture\\PROJEK UAS ALPRO 2 REG Beranda-01.png")); // NOI18N
        homePage.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        mulaiGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulaiGameActionPerformed(evt);
            }
        });
        homePage.add(mulaiGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 620, 330, 230));

        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });
        homePage.add(keluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 890, 330, 90));

        container.add(homePage, "homePage");

        gamePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kata.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        kata.setForeground(new java.awt.Color(121, 64, 2));
        kata.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gamePage.add(kata, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, 330, 90));

        timer_txt.setFont(new java.awt.Font("Segoe UI Black", 1, 120)); // NOI18N
        timer_txt.setForeground(new java.awt.Color(121, 64, 2));
        timer_txt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gamePage.add(timer_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 700, 170, 130));

        ans.setBackground(new java.awt.Color(255, 242, 226));
        ans.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ans.setBorder(null);
        ans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ansActionPerformed(evt);
            }
        });
        ans.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ansKeyTyped(evt);
            }
        });
        gamePage.add(ans, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 660, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Pribadi\\Picture\\PROJEK UAS ALPRO 2 REG GAMEEE-01.png")); // NOI18N
        gamePage.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        repeat.setBorder(null);
        repeat.setBorderPainted(false);
        repeat.setFocusPainted(false);
        repeat.setOpaque(false);
        repeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repeatActionPerformed(evt);
            }
        });
        gamePage.add(repeat, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 110, 130, 120));

        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        gamePage.add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 980, 1370, 60));

        StartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameActionPerformed(evt);
            }
        });
        gamePage.add(StartGame, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 130, 130));

        container.add(gamePage, "gamePage");

        winPage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon("D:\\Pribadi\\Picture\\PROJEK UAS ALPRO 2 REG Succes-01.png")); // NOI18N
        winPage.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1520, 1090));

        backHomePage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backHomePage1ActionPerformed(evt);
            }
        });
        winPage.add(backHomePage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 590, 180, 70));

        container.add(winPage, "winPage");

        losePage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setIcon(new javax.swing.ImageIcon("D:\\Pribadi\\Picture\\PROJEK UAS ALPRO 2 REG Fail-01.png")); // NOI18N
        losePage.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 0, 1520, 1090));

        backHomePage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backHomePage2ActionPerformed(evt);
            }
        });
        losePage.add(backHomePage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 900, 180, 60));

        container.add(losePage, "losePage");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 1522, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 1083, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String soal = ambilKodeMorse(kata.getText());
        String jawaban = ans.getText();
       
        System.out.println(soal);
        System.out.println(jawaban);
        
        boolean cek = cekJawaban(soal, jawaban);
        if(cek) {
            CardLayout cLayout = (CardLayout) container.getLayout();
            cLayout.show(container, "winPage");
        } else {
            CardLayout cLayout = (CardLayout) container.getLayout();
            cLayout.show(container, "losePage");
        }
        timer.cancel();
        ans.setText("");
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_submitActionPerformed

    private void ansKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ansKeyTyped
        char c = evt.getKeyChar();
        if(c != '.' && c != '-' && c != ' ') {
            evt.consume();
        }
    }//GEN-LAST:event_ansKeyTyped

    private void repeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repeatActionPerformed
        timer.cancel();
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_repeatActionPerformed

    
    private void mulaiGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulaiGameActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "gamePage");
        
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_mulaiGameActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        JOptionPane.showMessageDialog(null, "Logout Anda Telah Berhasil,"
            + " Mohon Login Ulang");
        
        login firstGUI = new login();
        firstGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_keluarActionPerformed

    
    private void StartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameActionPerformed
        JOptionPane.showMessageDialog(null, "Bersiap Untuk Menjawab Soal"
                + " Kode Morsenya !!!");
        waktu();
        String kataTerpilih = kataAcak();
        kata.setText(kataTerpilih);
    }//GEN-LAST:event_StartGameActionPerformed

    private void backHomePage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backHomePage2ActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "homePage");
    }//GEN-LAST:event_backHomePage2ActionPerformed

    private void backHomePage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backHomePage1ActionPerformed
        CardLayout cLayout = (CardLayout) container.getLayout();
        cLayout.show(container, "homePage");
    }//GEN-LAST:event_backHomePage1ActionPerformed

    private void ansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ansActionPerformed
        String soal = ambilKodeMorse(kata.getText());
        String jawaban = ans.getText();
       
        System.out.println(soal);
        System.out.println(jawaban);
        
        boolean cek = cekJawaban(soal, jawaban);
        if(cek) {
            CardLayout cLayout = (CardLayout) container.getLayout();
            cLayout.show(container, "winPage");
        } else {
            CardLayout cLayout = (CardLayout) container.getLayout();
            cLayout.show(container, "losePage");
        }
        timer.cancel();
        ans.setText("");
        kata.setText("");
        timer_txt.setText(countdownSeconds + "");
    }//GEN-LAST:event_ansActionPerformed

    /**
     * @param args the command line arguments
     */
    
    private static String kataAcak() {
        String []arr = {"Hanif", "Dimas", "Robi", "Argha", "Zulhan"};
        
        // Menghasilkan angka bulat acak antara 0 (inklusif) dan 10 (eksklusif)
        String kataacak = arr[(int) (Math.random() * (arr.length))];
//        System.out.println((int) (Math.random() * (arr.length)));
        return arr[(int) (Math.random() * (arr.length))];
        
    }
    
    private Timer timer;
    
    int countdownSeconds =  3;
    private void waktu() {
        
        if(timer != null) {
            timer.cancel();
        }
        
        timer = new Timer();
        int delay = 0;
        int period = 1000;

        
        TimerTask task = new TimerTask() {
            int secondsRemaining = countdownSeconds;

            @Override
            public void run() {
                timer_txt.setText(Integer.toString(secondsRemaining));
                secondsRemaining--;
                if (secondsRemaining == -1){
                    timer.cancel(); // Stop the timer
                    ans.setText("");
                    kata.setText("");
                    timer_txt.setText(countdownSeconds + "");
                    CardLayout cLayout = (CardLayout) container.getLayout();
                    cLayout.show(container, "losePage");
                }
            }
        };

        // Schedule the task to run every second
        timer.scheduleAtFixedRate(task, delay, period);
    }

    
    private static String loadDatabase(char c) {
        String morse = "";
        try {
            String sql = "SELECT code FROM code WHERE simbol = '" + c + "'";
            System.out.println(sql);
            java.sql.Connection conn = (java.sql.Connection)config.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            
            try{
                java.sql.ResultSet rs = pst.executeQuery(sql);
                if(rs.next()){
                    morse = rs.getString("code");
                }
            } catch (SQLException e){
                e.printStackTrace();
            }
            
        } catch (SQLException e){
            e.printStackTrace();
        }
        
        return morse;
    }
    
    public static String ambilKodeMorse(String kataTerpilih) {
        StringBuilder morseCodeStr = new StringBuilder();
        for (int i = 0; i < kataTerpilih.length(); i++) {
            char lowercaseChar = Character.toLowerCase(kataTerpilih.charAt(i)); // Konversi ke huruf kecil
            String morse = loadDatabase(lowercaseChar);
            if (morse != null) {
                morseCodeStr.append(morse).append(" ");
            }
        }
        return morseCodeStr.toString().trim();
    }
    
    private static boolean cekJawaban(String jawaban, String soal) {
        return jawaban.trim().equals(soal.trim());
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton StartGame;
    private javax.swing.JTextField ans;
    private javax.swing.JButton backHomePage1;
    private javax.swing.JButton backHomePage2;
    private javax.swing.JPanel container;
    private javax.swing.JPanel gamePage;
    private javax.swing.JPanel homePage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel kata;
    private javax.swing.JButton keluar;
    private javax.swing.JPanel losePage;
    private javax.swing.JButton mulaiGame;
    private javax.swing.JButton repeat;
    private javax.swing.JButton submit;
    private javax.swing.JLabel timer_txt;
    private javax.swing.JPanel winPage;
    // End of variables declaration//GEN-END:variables
}
